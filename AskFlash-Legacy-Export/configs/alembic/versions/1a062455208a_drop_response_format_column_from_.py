"""Drop response_format column from ruleset table

Revision ID: 1a062455208a
Revises: 6693e3dae783
Create Date: 2025-05-28 13:24:19.604402

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '1a062455208a'
down_revision: Union[str, None] = '6693e3dae783'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('search_history',
    sa.Column('query', sa.String(), nullable=False),
    sa.Column('response', sa.String(), nullable=False),
    sa.Column('mode', sa.String(), nullable=False),
    sa.Column('sources_used', sa.JSON(), nullable=True),
    sa.Column('confidence_score', sa.Float(), nullable=False),
    sa.Column('ruleset_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('conversation_id', sa.String(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['ruleset_id'], ['public.ruleset.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['public.user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_index(op.f('ix_public_search_history_id'), 'search_history', ['id'], unique=False, schema='public')
    op.drop_index(op.f('ix_searchhistory_id'), table_name='searchhistory')
    op.drop_table('searchhistory')
    op.drop_index(op.f('ix_role_id'), table_name='role')
    op.drop_index(op.f('ix_role_name'), table_name='role')
    op.create_index(op.f('ix_public_role_id'), 'role', ['id'], unique=False, schema='public')
    op.create_index(op.f('ix_public_role_name'), 'role', ['name'], unique=True, schema='public')
    op.drop_index(op.f('ix_ruleset_id'), table_name='ruleset')
    op.create_index(op.f('ix_public_ruleset_id'), 'ruleset', ['id'], unique=False, schema='public')
    op.create_unique_constraint(None, 'ruleset', ['name'], schema='public')
    op.drop_constraint(op.f('ruleset_created_by_id_fkey'), 'ruleset', type_='foreignkey')
    op.create_foreign_key(None, 'ruleset', 'user', ['created_by_id'], ['id'], source_schema='public', referent_schema='public')
    op.drop_column('ruleset', 'response_format')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_index(op.f('ix_user_id'), table_name='user')
    op.create_index(op.f('ix_public_user_email'), 'user', ['email'], unique=True, schema='public')
    op.create_index(op.f('ix_public_user_id'), 'user', ['id'], unique=False, schema='public')
    op.drop_constraint(op.f('user_roles_user_id_fkey'), 'user_roles', type_='foreignkey')
    op.drop_constraint(op.f('user_roles_role_id_fkey'), 'user_roles', type_='foreignkey')
    op.create_foreign_key(None, 'user_roles', 'role', ['role_id'], ['id'], source_schema='public', referent_schema='public')
    op.create_foreign_key(None, 'user_roles', 'user', ['user_id'], ['id'], source_schema='public', referent_schema='public')
    op.drop_index(op.f('ix_wiki_indexes_wiki_id'), table_name='wiki_indexes')
    op.create_index(op.f('ix_public_wiki_indexes_wiki_id'), 'wiki_indexes', ['wiki_id'], unique=False, schema='public')
    op.drop_constraint(op.f('wiki_page_keywords_wiki_page_id_fkey'), 'wiki_page_keywords', type_='foreignkey')
    op.create_foreign_key(None, 'wiki_page_keywords', 'wiki_pages', ['wiki_page_id'], ['id'], source_schema='public', referent_schema='public', ondelete='CASCADE')
    op.drop_constraint(op.f('wiki_page_tags_wiki_page_id_fkey'), 'wiki_page_tags', type_='foreignkey')
    op.create_foreign_key(None, 'wiki_page_tags', 'wiki_pages', ['wiki_page_id'], ['id'], source_schema='public', referent_schema='public', ondelete='CASCADE')
    op.drop_index(op.f('ix_wiki_pages_page_id'), table_name='wiki_pages')
    op.create_index(op.f('ix_public_wiki_pages_page_id'), 'wiki_pages', ['page_id'], unique=False, schema='public')
    op.drop_constraint(op.f('wiki_pages_parent_page_id_fkey'), 'wiki_pages', type_='foreignkey')
    op.drop_constraint(op.f('wiki_pages_wiki_index_id_fkey'), 'wiki_pages', type_='foreignkey')
    op.create_foreign_key(None, 'wiki_pages', 'wiki_pages', ['parent_page_id'], ['id'], source_schema='public', referent_schema='public', ondelete='SET NULL')
    op.create_foreign_key(None, 'wiki_pages', 'wiki_indexes', ['wiki_index_id'], ['id'], source_schema='public', referent_schema='public', ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'wiki_pages', schema='public', type_='foreignkey')
    op.drop_constraint(None, 'wiki_pages', schema='public', type_='foreignkey')
    op.create_foreign_key(op.f('wiki_pages_wiki_index_id_fkey'), 'wiki_pages', 'wiki_indexes', ['wiki_index_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(op.f('wiki_pages_parent_page_id_fkey'), 'wiki_pages', 'wiki_pages', ['parent_page_id'], ['id'], ondelete='SET NULL')
    op.drop_index(op.f('ix_public_wiki_pages_page_id'), table_name='wiki_pages', schema='public')
    op.create_index(op.f('ix_wiki_pages_page_id'), 'wiki_pages', ['page_id'], unique=False)
    op.drop_constraint(None, 'wiki_page_tags', schema='public', type_='foreignkey')
    op.create_foreign_key(op.f('wiki_page_tags_wiki_page_id_fkey'), 'wiki_page_tags', 'wiki_pages', ['wiki_page_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(None, 'wiki_page_keywords', schema='public', type_='foreignkey')
    op.create_foreign_key(op.f('wiki_page_keywords_wiki_page_id_fkey'), 'wiki_page_keywords', 'wiki_pages', ['wiki_page_id'], ['id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_public_wiki_indexes_wiki_id'), table_name='wiki_indexes', schema='public')
    op.create_index(op.f('ix_wiki_indexes_wiki_id'), 'wiki_indexes', ['wiki_id'], unique=False)
    op.drop_constraint(None, 'user_roles', schema='public', type_='foreignkey')
    op.drop_constraint(None, 'user_roles', schema='public', type_='foreignkey')
    op.create_foreign_key(op.f('user_roles_role_id_fkey'), 'user_roles', 'role', ['role_id'], ['id'])
    op.create_foreign_key(op.f('user_roles_user_id_fkey'), 'user_roles', 'user', ['user_id'], ['id'])
    op.drop_index(op.f('ix_public_user_id'), table_name='user', schema='public')
    op.drop_index(op.f('ix_public_user_email'), table_name='user', schema='public')
    op.create_index(op.f('ix_user_id'), 'user', ['id'], unique=False)
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.add_column('ruleset', sa.Column('response_format', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'ruleset', schema='public', type_='foreignkey')
    op.create_foreign_key(op.f('ruleset_created_by_id_fkey'), 'ruleset', 'user', ['created_by_id'], ['id'])
    op.drop_constraint(None, 'ruleset', schema='public', type_='unique')
    op.drop_index(op.f('ix_public_ruleset_id'), table_name='ruleset', schema='public')
    op.create_index(op.f('ix_ruleset_id'), 'ruleset', ['id'], unique=False)
    op.drop_index(op.f('ix_public_role_name'), table_name='role', schema='public')
    op.drop_index(op.f('ix_public_role_id'), table_name='role', schema='public')
    op.create_index(op.f('ix_role_name'), 'role', ['name'], unique=True)
    op.create_index(op.f('ix_role_id'), 'role', ['id'], unique=False)
    op.create_table('searchhistory',
    sa.Column('query', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('response', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('sources_used', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('ruleset_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['ruleset_id'], ['ruleset.id'], name=op.f('searchhistory_ruleset_id_fkey')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('searchhistory_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('searchhistory_pkey'))
    )
    op.create_index(op.f('ix_searchhistory_id'), 'searchhistory', ['id'], unique=False)
    op.drop_index(op.f('ix_public_search_history_id'), table_name='search_history', schema='public')
    op.drop_table('search_history', schema='public')
    # ### end Alembic commands ###
